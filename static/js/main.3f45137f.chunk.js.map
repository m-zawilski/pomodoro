{"version":3,"sources":["Components/Logo/Logo.js","Components/Buttons/HeaderButton.js","Components/Header/Header.js","Components/Timer/Timer.js","Components/Buttons/SmallButton.js","Components/PlayPauseBar/PlayPauseBar.js","Components/Buttons/BigButton.js","Components/PomodoroBreakBar/PomodoroBreakBar.js","Components/Image/Image.js","Components/Body/Body.js","Components/Buttons/AcceptButton.js","Components/Slider/Slider.js","Components/Settings/SettingsView.js","Components/Modal/Modal.js","Components/Settings/Settings.js","Components/About/AboutView.js","Components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["Logo","react_default","a","createElement","className","href","alt","src","HeaderButton","_ref","buttonType","onClick","concat","Header","openSettings","openAbout","Components_Logo_Logo","Components_Buttons_HeaderButton","Timer","clock","clockMinutes","Math","floor","toString","padStart","clockSeconds","Button","PlayPauseBar","play","pause","reset","Buttons_SmallButton","BigButton","changeMode","value","type","PomodoroBreakBar","settings","Components_Buttons_BigButton","Image","currentMode","height","width","Body","Components_PomodoroBreakBar_PomodoroBreakBar","Components_Image_Image","Components_Timer_Timer","Components_PlayPauseBar_PlayPauseBar","AcceptButton","Slider","name","changeValue","number","min","max","step","defaultValue","onChange","SettingsView","saveSettings","settingsMinutes","map","event","stopPropagation","Components_Slider_Slider","Components_Buttons_AcceptButton","Modal","props","close","children","Settings","isSettings","cancelSettings","Components_Modal_Modal","Components_Settings_SettingsView","AboutView","About","isAbout","closeAbout","Components_About_AboutView","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRunning","setState","interval","setInterval","runClock","clearInterval","_this$state","option","mode","currentTarget","getAttribute","closeSettings","previousSettings","newSettings","target","JSON","parse","stringify","Number","sound","Audio","_this$state2","Components_Settings_Settings","Components_About_About","Components_Header_Header","Components_Body_Body","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f45137f.chunk.js","sourcesContent":["import React from 'react';\nimport './Logo.css';\n\nconst Logo =  () => {\n    return (\n      <div className='logoContainer'>\n      \t<a href='.'>\n      \t<img alt='Logo' src='./img/Logo.svg' className='logoImage'/>\n      \t</a>\n      </div>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport './HeaderButton.css';\n\nconst HeaderButton = ({buttonType, onClick}) => {\n    return (\n      \t<img \n      \t\tclassName='headerButton' \n      \t\tonClick={onClick}\n          src={`./img/${buttonType}.svg`}\n          alt={`${buttonType} button`}>\n        </img>\n    );\n}\n\nexport default HeaderButton;\n","import React from 'react';\nimport './Header.css';\nimport Logo from '../Logo/Logo';\nimport HeaderButton from '../Buttons/HeaderButton';\n\nconst Header = ({openSettings, openAbout}) => {\n    return (\n      <div className='header'>\n        <Logo/>\n        <div className='rightButtons'>\n        \t<HeaderButton \n        \t\tbuttonType='Settings'\n        \t\tonClick={openSettings}\n        \t/>\n        \t<HeaderButton \n        \t\tbuttonType='About'\n                onClick={openAbout}\n        \t/>\n        </div>\n      </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Timer.css';\n\nconst Timer = ({clock}) => {\n\tconst clockMinutes = (Math.floor(clock/60)).toString().padStart(2, '0');\n\tconst clockSeconds = (clock%60).toString().padStart(2, '0');\n    return (\n      <div className='timer'>\n      \t{`${clockMinutes[0]}${clockMinutes[1]}:` +\n      \t`${clockSeconds[0]}${clockSeconds[1]}`}\n      </div>\n      )\n}\n\nexport default Timer;\n","import React from 'react';\nimport './SmallButton.css';\n\nconst Button = ({buttonType, onClick}) => {\n    return (\n      \t<img\n      \t\tclassName='smallButton'\n      \t\tonClick={onClick}\n      \t\tsrc={`./img/${buttonType}.svg`}\n      \t\talt={`${buttonType} button`}>\n      \t</img>\n    );\n}\n\nexport default Button;\n","import React from 'react';\nimport './PlayPauseBar.css';\nimport SmallButton from '../Buttons/SmallButton';\n\nconst PlayPauseBar =  ({play, pause, reset}) => {\n    return (\n      <div className='PlayPauseBar'>\n      \t<SmallButton \n      \t\tbuttonType='reset'\n      \t\tonClick={reset}\n      \t/>\n      \t<SmallButton \n      \t\tbuttonType='play'\n    \t\t\tonClick={play}\n    \t\t/>\n      \t<SmallButton \n      \t\tbuttonType='pause'\n      \t\tonClick={pause}\n      \t/>\n      </div>\n    );\n}\n\nexport default PlayPauseBar;\n","import React from 'react';\nimport './BigButton.css';\n\nconst BigButton = ({buttonType, changeMode, value}) => {\n    return (\n      \t<img \n      \t\tclassName={`bigButton`} \n      \t\ttype='button'\n      \t\tonClick={changeMode}\n      \t\tvalue={value}\n      \t\tsrc={`./img/${''+buttonType}.svg`}\n      \t\talt={`${buttonType} button`}/>\n    );\n}\n\nexport default BigButton;\n","import React from 'react';\nimport './PomodoroBreakBar.css';\nimport BigButton from '../Buttons/BigButton';\n\nconst PomodoroBreakBar = ({changeMode, settings}) => {\n    return (\n      <div className='PomodoroBreakBar'>\n        \t<BigButton \n        \t\tbuttonType='Pomodoro'\n        \t\tchangeMode={changeMode}\n                value={0}\n        \t/>\n        \t<BigButton \n        \t\tbuttonType='Short Break'\n        \t\tchangeMode={changeMode}\n                value={1}\n        \t/>\n        \t<BigButton \n        \t\tbuttonType='Long Break'\n        \t\tchangeMode={changeMode}\n                value={2}\n        \t/>\n      </div>\n    );\n}\n\nexport default PomodoroBreakBar;\n","import React from 'react';\nimport './Image.css';\n\nconst Image = ({currentMode, clock}) => {\n    return clock ? \n    \t\t(\n        <div className='image'>\n            <img \n            \talt='Funny tomato' \n            \tsrc={`./img/middleImage${currentMode}.svg`}\n            \theight='200px' \n            \twidth='200px'\n            />\n        </div>\n        ) \n        : \n    \t\t(\n        <div className='image'>\n        \t<img \n            \talt='Funny tomato' \n            \tsrc={`./img/timeEnd.svg`}\n            \theight='200px' \n            \twidth='200px'\n            />\n        </div>\n    \t\t)\n}\n\nexport default Image;\n","import React from 'react';\nimport './Body.css';\nimport Timer from '../Timer/Timer';\nimport PlayPauseBar from '../PlayPauseBar/PlayPauseBar';\nimport PomodoroBreakBar from '../PomodoroBreakBar/PomodoroBreakBar';\nimport Image from '../Image/Image';\n\nconst Body = ({clock, play, pause, reset, changeMode, settings, currentMode}) => {\n    return (\n      \t<div className=\"body\">\n      \t\t<PomodoroBreakBar\n            changeMode={changeMode}\n            settings={settings}\n          />\n          <Image\n            currentMode={currentMode}\n            clock={clock}\n          />\n      \t\t<Timer\n\t        \tclock={clock}\n        \t/>\n      \t\t<PlayPauseBar \n      \t\t\tplay={play}\n            pause={pause}\n            reset={reset}\n      \t\t/>\n      \t</div>\n    );\n}\n\nexport default Body;\n","import React from 'react';\nimport './AcceptButton.css';\n\nconst AcceptButton = ({buttonType, onClick, settings}) => {\n    return (\n      \t<button \n      \t\tclassName='acceptButton' \n      \t\ttype='button'\n      \t\tonClick={onClick}\n      \t\tvalue={settings}\n      \t\t>\n      \t\t\t{buttonType}\n      \t\t</button>\n    );\n}\n\nexport default AcceptButton;","import React from 'react';\nimport './Slider.css';\n\nconst Slider = ({name, value, changeValue, number}) => {\n  \treturn (\n        <div className='sliderContainer'>\n            <label \n                className='label'\n            >\n                {name} - {value} min\n            </label>\n            <input \n            \ttype='range' \n            \tclassName='slider'\n                name={name}\n            \tmin='5'\n            \tmax='60'\n                step='5'\n                defaultValue={value}\n                number={number}\n                onChange={changeValue}\n            />\n        </div>\n    );\n}\n\nexport default Slider;","import React from 'react';\nimport './SettingsView.css';\nimport AcceptButton from '../Buttons/AcceptButton';\nimport Slider from '../Slider/Slider';\n\nconst SettingsView = ( {settings, changeValue, saveSettings} ) => {\n    const settingsMinutes = settings.map((value) => {\n        return Math.floor(value/60);\n    });\n    return (\n        <div className='settingsView' onClick={(event) => event.stopPropagation()}>\n            <div>\n                <Slider\n                    name='Pomodoro'\n                    number={0}\n                    value={settingsMinutes[0]}\n                    changeValue={changeValue(0)}\n                    className='slider'\n                />\n                <Slider\n                    name='Short Break'\n                    number={1}\n                    value={settingsMinutes[1]}\n                    changeValue={changeValue(1)}\n                    className='slider'\n                />\n                <Slider\n                    name='Long Break'\n                    number={2}\n                    value={settingsMinutes[2]}\n                    changeValue={changeValue(2)}\n                    className='slider'\n                />\n            </div>\n            <AcceptButton\n                buttonType='Accept'\n                onClick={saveSettings}\n            />\n        </div>\n    );\n}\n\nexport default SettingsView;\n","import React from 'react';\nimport './Modal.css';\n\nconst Modal = ( props ) => {\n    return (\n    \t<div className='modal on' onClick={props.close}>\n    \t\t{props.children}\n    \t</div>\n    )\n}\n\nexport default Modal;\n","import React from 'react';\nimport './Settings.css';\nimport SettingsView from './SettingsView';\nimport Modal from '../Modal/Modal';\n\nconst Settings = ( {isSettings, cancelSettings, settings, changeValue, saveSettings} ) => {\n    if (isSettings){\n    \treturn (\n\t      <Modal close={cancelSettings}>\n\t       \t<SettingsView\n                settings={settings}\n                changeValue={changeValue}\n                saveSettings={saveSettings}\n\t      \t/>\n\t      </Modal>\n    \t);\n    } else {\n    \treturn (\n\t      null\n    \t)\n    }\n}\n\nexport default Settings;\n","import React from 'react';\nimport './AboutView.css';\n\n\n//Change Lorem Ipsum to real text\nconst AboutView = () => {\n    return (\n        <div className='aboutView'>\n            <article>\n                <p>The Pomodoro Technique is a time management method\n                developed by Francesco Cirillo in the late 1980s.\n                The technique uses a timer to break down work into intervals, \n                aditionally 25 minutes in length, separated by short breaks. \n                These intervals are named pomodoros, the anglicized plural of \n                the Italian word pomodoro (tomato), after the tomato-shaped \n                kitchen timer that Cirillo used as a university student.</p>\n                <h2>How to pomodoro efficiently?</h2>\n                <ol>\n                \t<li>Decide on the task to be done.</li>\n                \t<li>Set the pomodoro timer (traditionally: 25 minutes).</li>\n                \t<li>Work on the task.</li>\n                \t<li>End work when the timer rings and one to your pomodoro count.</li>\n                \t<li>If your pomodoro count is not divisible by four, \n                \ttake a short break (3-5 minutes) and go back to step 2.</li>\n                \t<li>If your pomodoro count is divisible by four, take a longer\n                \tbreak (15-30 minutes) and go back to step 1.</li>\n                </ol>\n    \t\t\t<h2>Click anywhere to go back</h2>\n            </article>\n        </div>\n    );\n}\n\nexport default AboutView;\n","import React from 'react';\nimport Modal from '../Modal/Modal';\nimport AboutView from './AboutView';\n\nconst About = ( {isAbout, closeAbout} ) => {\n    if (isAbout){\n    \treturn (\n            <Modal close={closeAbout}>\n    \t      <AboutView/>\n            </Modal>\n    \t);\n    } else {\n    \treturn (\n\t      null\n    \t)\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Body from './Components/Body/Body';\nimport Settings from './Components/Settings/Settings';\nimport About from './Components/About/About'\n\nclass App extends Component {\n\n\tplay = () => {\n\t\tif (!this.state.isRunning){\n\t\t\tthis.setState({interval: setInterval(this.runClock, 1000)});\t\n\t\t\tthis.setState({isRunning: true});\n\t\t} \n\t}\n\n\tpause = () => {\n\t\tclearInterval(this.state.interval);\n\t\tthis.setState({isRunning: false});\n\t}\n\n\treset = () => {\n\t\tconst { settings, option } = this.state;\n\t\tthis.setState({clock: settings[option]});\n\t\tthis.pause();\n\t}\n\n\trunClock = () => {\n\t\tconst {clock} = this.state;\n\t\tif (clock !== 0){\n\t\t\tthis.setState({clock: clock-1});\n\t\t}\n\t}\n\n\tchangeMode = (event) => {\n\t\tconst mode = event.currentTarget.getAttribute('value');\n\t\tconst { settings } = this.state;\n\t\tthis.setState({option: mode, clock: settings[mode]});\n\t\tthis.pause();\n\t}\n\n\topenSettings = () => {\n\t\tthis.setState({isSettings: true});\n\t}\n\n\tcloseSettings = () => {\n\t\tthis.setState({isSettings: false});\n\t}\n\n\topenAbout = () => {\n\t\tthis.setState({isAbout: true});\n\t}\n\n\tcloseAbout = () => {\n\t\tthis.setState({isAbout: false});\n\t}\n\n\tcancelSettings = () => {\n\t\tthis.closeSettings();\n\t\tconst { previousSettings } = this.state;\n\t\tthis.setState({settings: previousSettings});\n\t}\n\n\tsaveSettings = () => {\n\t\tthis.closeSettings();\n\t\tconst newSettings = this.state.settings;\n\t\tthis.setState({previousSettings: newSettings});\n\t\tthis.reset();\n\t}\n\n \tchangeValue = (number) => (event) => {\n \t\t\tconst { value } = event.target;\n \t\t\tconst newSettings = JSON.parse(JSON.stringify(this.state.settings));\n \t\t\tnewSettings[number] = Number(value*60);\n      this.setState({settings: newSettings});\n  }\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisRunning: false,\n\t\t\tisSettings: false,\n\t\t\tisAbout: false,\n\t\t\tsettings: [1500, 300, 600],\t\t\t\t\t\t\t\t//Pomodoro/Short Break/Long Break\n\t\t\tclock: 1500,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//all times are in seconds\n\t\t\toption: 0,\n\t\t\tinterval: {},\n\t\t\tpreviousSettings: [1500, 300, 600],\n\t\t\tsound: new Audio('./sounds/alarm.wav') || new Audio('./sounds/alarm.mp3')\n\t\t}\n\t}\n\n  render() {\n  \tconst { settings, isSettings, clock, sound, isAbout, option } = this.state;\n  \tif (clock === 0) {\n  \t\tsound.play();\n  \t} else {\n  \t\tsound.pause();\n  \t}\n    return (\n      <div>\n        <Settings\n        \tisSettings={isSettings}\n        \tcancelSettings={this.cancelSettings}\n        \tsettings={settings}\n        \tchangeValue={this.changeValue}\n        \tsaveSettings={this.saveSettings}\n        />\n        <About \n        \tisAbout={isAbout}\n        \tcloseAbout={this.closeAbout}\n        />\n        <Header\n        \topenSettings={this.openSettings}\n        \topenAbout={this.openAbout}\n        />\n        <Body \n        \tclock={clock}\n        \tplay={this.play}\n        \tpause={this.pause}\n        \treset={this.reset}\n        \tchangeMode={this.changeMode}\n        \tsettings={settings}\n        \tcurrentMode={option}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}